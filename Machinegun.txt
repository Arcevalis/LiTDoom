ACTOR Machinegun : BrutalWeapon 
{
	Weapon.SelectionOrder 600
	Weapon.AmmoType1 "CLIP2"
	Weapon.AmmoGive1 0
	Weapon.AmmoUse1 0
	Weapon.AmmoType2 "LMGAMMO"
	Weapon.AmmoGive2 0
	Weapon.AmmoUse2 0
	+WEAPON.NOAUTOAIM
	+WEAPON.NOALERT
	//+WEAPON.NOAUTOFIRE
	+FORCEXYBILLBOARD
	+WEAPON.ALT_AMMO_OPTIONAL
	Inventory.PickupSound "CBOXPKUP"
	Inventory.PickupMessage "$GOTLMG"
	Obituary "%o was mowed down by %k's Machine Gun."
	AttackSound "none"
	Scale 0.45
	Tag "Vuurkrag SW-24"
	States
	{
	Spawn:
		MGN1 Z 1
		MGN1 Z -1
		Stop
		
		
	WarmUp:
		BADF A 0 A_TakeInventory("neverfoundLMG", 1)
	FirstMag1:
		BADF A 0 a_overlay(2,"INSPECTcamera")
		LMGI ABC 1 A_JumpIfInventory("Kicking",1,"InspectCancel")
		BADF A 0 A_PlaySound("RELO1")
		LMGI DEFGGHHHHHHII 1 A_JumpIfInventory("Kicking",1,"InspectCancel")
		BADF A 0 A_PlaySound("BELT1")
		LMGI JKLMNNOOOOOPPQR 1 A_JumpIfInventory("Kicking",1,"InspectCancel")
		BADF A 0 A_PlaySound("BELT2")
		LMGI STU 1 A_JumpIfInventory("Kicking",1,"InspectCancel")
		TNT1 A 13 A_JumpIfInventory("Kicking",1,"InspectCancel")
		BADF A 0 A_PlaySound("GRNTOSS")
		LMG1 ABCDEFG 1 A_JumpIfInventory("Kicking",1,"InspectCancel")
		LMGL P 0 A_playsound("MAGTHUD",1)
		LMG1 HIIIJKLMNNOOOOOOPQRSTUVWXYZ 1 A_JumpIfInventory("Kicking",1,"InspectCancel")
		LMGI VWX 1 A_JumpIfInventory("Kicking",1,"InspectCancel")
		
		BADF A 0 a_overlay(2,"RELOADcamera")
		LMGL IJ 1
		BADF A 0 A_PlaySound("MGMAGIN", 6)
		LMGL KLN 1 A_JumpIfInventory("Kicking",1,"InspectCancel")
		LMGL N 8 A_JumpIfInventory("Kicking",1,"InspectCancel")
		LMGL O 1 A_JumpIfInventory("Kicking",1,"InspectCancel")
		LMGL P 5 A_JumpIfInventory("Kicking",1,"InspectCancel")
		LMGL P 0 A_PlaySound("mgmagtap", 1)
		TNT1 A 0 A_QUAKE(2,4,0,200)
		LMGL STTTTTTUVUV 1 A_JumpIfInventory("Kicking",1,"InspectCancel")
		LMGL WXYZ 1 A_JumpIfInventory("Kicking",1,"InspectCancel")
		LMGD EDCB 1 A_JumpIfInventory("Kicking",1,"InspectCancel")
		BADF A 0 A_PlaySound("MGBOLT2", 1)
		LMLG ABCDEFGHIJKLLMMMM 1 A_JumpIfInventory("Kicking",1,"InspectCancel")
		LMLG O 0 A_PLAYSOUND("weapons/reloadgrenade",1)	
		LMLG NNO 2 A_JumpIfInventory("Kicking",1,"InspectCancel") 
		LMLG O 0 A_GIVEINVENTORY("LMGGRENADE", 1)
		LMLG PQRSTUVWXYZ 1	 A_JumpIfInventory("Kicking",1,"InspectCancel")
		LMLG O 0 A_PLAYSOUND("GRLLO1",6)
		LMLG O 0 A_GIVEINVENTORY("LMGammo", 30)
		Goto InsertBullets

		
	Ready: 
	SelectAnimation:
		LMLG O 0 
		TNT1 A 0 A_JumpIfInventory("ExecuteDownedEnemy", 1, "DoExecution")
		MGN1 A 0 
		BADF A 0 A_JumpIfInventory("neverfoundLMG",1,"WarmUp")
		MGN1 A 0 A_JumpIfInventory("HASUNLOADEDLMG",1,"selectempty")
		LMGD GGFEDCB 1 A_JumpIfInventory("GoFatality", 1, "Steady")
		Goto Ready3
	SELECTEMPTY:
		LMGD FEH 1
		LMUG DCBA 1
		Goto Ready3
	Ready3:
		"####" "#" 0 A_JumpIfInventory("Kicking",1,"DOKICKLMG")
		"####" "#" 0 A_JumpIfInventory("StartDualWield",1,"ReloadGrenade")
		"####" "#" 0 A_JumpIfInventory("HASUNLOADEDLMG",1,"UNLOADED")
		LMGF A 1 A_WeaponReadyLit
		Loop	
		 	 
		Unloaded:
		"####" "#" 0 A_JumpIfInventory("Kicking",1,"DOKICKLMG")
		"####" "#" 0 A_JumpIfInventory("StartDualWield",1,"ReloadGrenade")		
		LMGR A 1 A_WeaponReadyLit
		Loop	
		  
	CheckSprint:
		MGN1 A 0 A_JumpIfInventory("hasunloadedLMG", 1, "CheckSprintunloaded")
		//LMGF A 1
		MGN1 A 0 A_JumpIfInventory("IsStandingStill", 1, "Ready3")
		MGN1 A 0 A_JumpIfInventory("IsTacticalClass", 1, "StartSprint")
		Goto Ready3
		
	StartSprint:
		MGN1 A 0 A_JumpIfInventory("hasunloadedLMG", 1, "StartSprintunloaded")
		TNT1 A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & BT_FORWARD, 1)
		GOTO READY3
		LMGS BCDEFGHI 1 A_WeaponReady(WRF_NOFIRE)
		MGN1 A 0 A_Takeinventory("Zoomed",1)
		MGN1 A 0 A_Takeinventory("ADSmode",1)
		MGN1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_JumpIfInventory("LARGESTAMINA", 1, 2)
		TNT1 A 0 A_JumpIfInventory("UsedStamina", 70, "Trip")
		TNT1 A 0 A_JumpIfInventory("UsedStamina", 1400, "Trip")
		
	Sprinting:	
		MGN1 S 0 offset(-9,32) 
		MGN1 A 0 offset(-9,32) A_JumpIfInventory("IsStandingStill", 1, "Ready3")
		TNT1 A 0 A_JumpIfInventory("LARGESTAMINA", 1, 2)
		TNT1 A 0 A_JumpIfInventory("UsedStamina", 100, "StopSprintTired")
		TNT1 A 0 A_JumpIfInventory("UsedStamina", 2000, "StopSprintTired")
		TNT1 A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & BT_FORWARD, 1)
		GOTO Stopsprint
		PLAY A 0 offset(-9,32) ACS_ExecuteAlways(852, 0, 0, 0, 0)//Makes player faster.
		MGN1 A 0 offset(-9,32) A_JumpIfInventory("Powerstrength2", 1, 2)
		MGN1 A 0 offset(-9,32) A_GiveInventory("UsedStamina", 15)
		MGN1 A 0 offset(-9,32)
		LMGS J 1 offset(-9,34) A_SetPitch(pitch -0.5)
		LMGS J 1 offset(-6,36) A_SetPitch(pitch -0.5)
		LMGS J 1 offset(-3,38) A_SetPitch(pitch -0.5)
		LMGS J 1 offset(0,38) A_SetPitch(pitch -0.5)
		LMGS J 1 offset(3,36) A_SetPitch(pitch -0.5)
		LMGS J 1 offset(6,34) A_SetPitch(pitch -0.5)
		LMGS J 1 offset(9,32) A_SetPitch(pitch -0.5)
		MGN1 A 0 offset(9,32) A_WeaponReady(WRF_NOBOB)
		MGN1 A 0 A_JumpIfInventory("Kicking",1,"DOKICKLMG")
        MGN1 A 0 A_JumpIfInventory("Taunting",1,"Taunt")
        MGN1 A 0 
		MGN1 A 0 offset(-9,32) A_GiveInventory("UsedStamina", 6)
		MGN1 A 0 offset(9,33) A_SpawnItemEx("FootStep", 0, 0, 2, 0, 0, -4)
		LMGS J 1 offset(9,34) A_SetPitch(pitch +0.5)
		LMGS J 1 offset(6,36) A_SetPitch(pitch +0.5)
		LMGS J 1 offset(3,38) A_SetPitch(pitch +0.5)
		LMGS J 1 offset(0,38) A_SetPitch(pitch +0.5)
		LMGS J 1 offset(-3,36) A_SetPitch(pitch +0.5)
		LMGS J 1 offset(-6,34) A_SetPitch(pitch +0.5)
		LMGS J 1 offset(-9,32) A_SetPitch(pitch +0.5)
		MGN1 A 0 offset(-9,32) A_WeaponReady(WRF_NOBOB)
		MGN1 A 0 offset(-9,32) A_JumpIfInventory("IsRunning", 1, "Sprinting")
		Goto StopSprint
		
	StopSprintTired:
		LMGS IHGFEDCB 1 A_WeaponReady(WRF_NOFIRE)
		LMGF A 1
		PLAY A 0 ACS_ExecuteAlways(853, 0, 0, 0, 0)//Makes player slower.
		MGN1 A 0 A_PlaySound("Tired", 2)
		MGN1 A 0 A_TakeInventory("usedstamina", 1)
		TNT1 A 0 A_Jumpifhealthlower(25,"rupturesprint")												  
		LMGF A 5 A_WeaponReady
		MGN1 A 0 A_TakeInventory("usedstamina", 1)
		LMGF A 5 A_WeaponReady
		MGN1 A 0 A_TakeInventory("usedstamina", 1)
		LMGF A 5 A_WeaponReady
		MGN1 A 0 A_TakeInventory("usedstamina", 1)
		LMGF A 5 A_WeaponReady
		MGN1 A 0 A_TakeInventory("usedstamina", 1)
		LMGF A 5 A_WeaponReady
		Goto Ready3
	StopSprint:
		LMGS IHGFEDCB 1 A_WeaponReady(WRF_NOFIRE)
		LMGF A 1
		TNT1 A 0 A_JumpIfInventory("LARGESTAMINA", 1, 2)
		TNT1 A 0 A_JumpIfInventory("UsedStamina", 70, "StopSprintTired")
		TNT1 A 0 A_JumpIfInventory("UsedStamina", 1400, "StopSprintTired")
		PLAY A 0 ACS_ExecuteAlways(853, 0, 0, 0, 0)//Makes player slower.
		Goto Ready3 	
		
	///// UNLOADED	SPRINT
	
	  
	CheckSprintunloaded:
		LMGR A 1
		MGN1 A 0 A_JumpIfInventory("IsStandingStill", 1, "Ready3")
		MGN1 A 0 A_JumpIfInventory("IsTacticalClass", 1, "StartSprintUnloaded")
		Goto Ready3
	
	StartSprintUnloaded:
		TNT1 A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & BT_FORWARD, 1)
		GOTO READY3
		LMGR ABCD 1 A_WeaponReady(WRF_NOFIRE)
		MGN1 A 0 A_Takeinventory("Zoomed",1)
		MGN1 A 0 A_Takeinventory("ADSmode",1)
		MGN1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_JumpIfInventory("LARGESTAMINA", 1, 2)
		TNT1 A 0 A_JumpIfInventory("UsedStamina", 70, "Trip")
		TNT1 A 0 A_JumpIfInventory("UsedStamina", 1400, "Trip")
		
	SprintingUnloaded:	
		MGN1 S 0 offset(-9,32) 
		MGN1 A 0 offset(-9,32) A_JumpIfInventory("IsStandingStill", 1, "Ready3")
		TNT1 A 0 A_JumpIfInventory("LARGESTAMINA", 1, 2)
		TNT1 A 0 A_JumpIfInventory("UsedStamina", 100, "StopSprintTiredunloaded")
		TNT1 A 0 A_JumpIfInventory("UsedStamina", 2000, "StopSprintTiredunloaded")
		TNT1 A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & BT_FORWARD, 1)
		GOTO Stopsprintunloaded
		PLAY A 0 offset(-9,32) ACS_ExecuteAlways(852, 0, 0, 0, 0)//Makes player faster.
		MGN1 A 0 offset(-9,32) A_JumpIfInventory("Powerstrength2", 1, 2)
		MGN1 A 0 offset(-9,32) A_GiveInventory("UsedStamina", 15)
		MGN1 A 0 offset(-9,32)
		LMGR D 1 offset(-9,34) A_SetPitch(pitch -0.5)
		LMGR D 1 offset(-6,36) A_SetPitch(pitch -0.5)
		LMGR D 1 offset(-3,38) A_SetPitch(pitch -0.5)
		LMGR D 1 offset(0,38) A_SetPitch(pitch -0.5)
		LMGR D 1 offset(3,36) A_SetPitch(pitch -0.5)
		LMGR D 1 offset(6,34) A_SetPitch(pitch -0.5)
		LMGR D 1 offset(9,32) A_SetPitch(pitch -0.5)
		MGN1 A 0 offset(9,32) A_WeaponReady(WRF_NOBOB)
		MGN1 A 0 A_JumpIfInventory("Kicking",1,"DOKICKLMG")
        MGN1 A 0 A_JumpIfInventory("Taunting",1,"Taunt")
        MGN1 A 0 
		MGN1 A 0 offset(-9,32) A_GiveInventory("UsedStamina", 6)
		MGN1 A 0 offset(9,33) A_SpawnItemEx("FootStep", 0, 0, 2, 0, 0, -4)
		LMGR D 1 offset(9,34) A_SetPitch(pitch +0.5)
		LMGR D 1 offset(6,36) A_SetPitch(pitch +0.5)
		LMGR D 1 offset(3,38) A_SetPitch(pitch +0.5)
		LMGR D 1 offset(0,38) A_SetPitch(pitch +0.5)
		LMGR D 1 offset(-3,36) A_SetPitch(pitch +0.5)
		LMGR D 1 offset(-6,34) A_SetPitch(pitch +0.5)
		LMGR D 1 offset(-9,32) A_SetPitch(pitch +0.5)
		MGN1 A 0 offset(-9,32) A_WeaponReady(WRF_NOBOB)
		MGN1 A 0 offset(-9,32) A_JumpIfInventory("IsRunning", 1, "Sprintingunloaded")
		Goto StopSprintunloaded
		
	StopSprintTiredUnloaded:
		LMGR DCBA 1 A_WeaponReady(WRF_NOFIRE)
		LMGR A 1
		PLAY A 0 ACS_ExecuteAlways(853, 0, 0, 0, 0)//Makes player slower.
		MGN1 A 0 A_PlaySound("Tired", 2)
		MGN1 A 0 A_TakeInventory("usedstamina", 1)
		TNT1 A 0 A_Jumpifhealthlower(25,"rupturesprint")												  
		LMGR A 5 A_WeaponReady
		MGN1 A 0 A_TakeInventory("usedstamina", 1)
		LMGR A 5 A_WeaponReady
		MGN1 A 0 A_TakeInventory("usedstamina", 1)
		LMGR A 5 A_WeaponReady
		MGN1 A 0 A_TakeInventory("usedstamina", 1)
		LMGR A 5 A_WeaponReady
		MGN1 A 0 A_TakeInventory("usedstamina", 1)
		LMGR A 5 A_WeaponReady
		Goto Ready3
	StopSprintUnloaded:
		LMGR DCBA 1 A_WeaponReady(WRF_NOFIRE)
		LMGR A 1
		TNT1 A 0 A_JumpIfInventory("LARGESTAMINA", 1, 2)
		TNT1 A 0 A_JumpIfInventory("UsedStamina", 70, "StopSprintTired")
		TNT1 A 0 A_JumpIfInventory("UsedStamina", 1400, "StopSprintTired")
		PLAY A 0 ACS_ExecuteAlways(853, 0, 0, 0, 0)//Makes player slower.
		Goto Ready3 	

		Deselect:
			MGN1 A 0 A_TakeInventory ("LMGSELECTED",1)
			MGN1 A 0 A_TakeInventory ("Spin",1)
			TNT1 A 0 A_TakeInventory("throwtoken", 1)
		TNT1 A 0 A_TakeInventory("slashtoken", 1)
			SHTZ A 0 A_TakeInventory("Flaretoken", 1)
			MGN1 A 0 A_TakeInventory("TossGrenade", 1)
			MGN1 A 0 A_Takeinventory("HeavyAutomaticWeapon",1)
			MGN1 A 0 A_TakeInventory("RandomHeadExploder", 1)
			MGN1 A 0 SetPlayerProperty(0,0,0)
			
			MGN1 A 0 A_JumpIfInventory("HASUNLOADEDLMG",1,"DESELECTEMPTY")
			TNT1 A 0 A_JumpIfInventory("weaponbroke", 1, "Deselectcontinue")
			LMGD BCDEFG 1
		DESELECTCONTINUE:
			TNT1 AAAAAAAAAAAAAAAAAA 0 A_Lower
			TNT1 A 1 A_Lower
			Wait
			
		DESELECTEMPTY:
			LMUG ABCD 1
			LMGD HEF 1	
			LMGR AAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_Lower
			WAIT
		

		goingtoaction:
			MGN1 A 0 A_TakeInventory ("Spin",1)
			TNT1 A 0 A_TakeInventory("throwtoken", 1)
		TNT1 A 0 A_TakeInventory("slashtoken", 1)
			SHTZ A 0 A_TakeInventory("Flaretoken", 1)
			MGN1 A 0 A_TakeInventory("TossGrenade", 1)
			MGN1 A 0 SetPlayerProperty(0,0,0)
			MGN1 A 0 A_JumpIfInventory("HASUNLOADEDLMG",1,7)
			LMGD BCDEFG 1
			TNT1 A 0 A_JumpIfInventory("weargasmask", 1, "wearanimation")
			TNT1 A 0 A_JumpIfInventory("removegasmask", 1, "removeanimation")
			TNT1 A 0 A_JumpIfInventory("battledrugtoken",1,"drugshot")
			TNT1 A 0 A_JumpIfInventory("BANDAGETOKEN",1,"BANDAGE")
			goto repair
			LMGR A 1 OFFSET(0,34)
			LMGR A 1 OFFSET(0,37)
			LMGR A 1 OFFSET(0,40)
			LMGR A 1 OFFSET(0,43)
			LMGR A 1 OFFSET(0,46)
			LMGR A 1 OFFSET(0,50)
			LMGR A 1 OFFSET(0,55)
			LMGR A 1 OFFSET(0,65)
			TNT1 A 0 A_JumpIfInventory("weargasmask", 1, "wearanimation")
			TNT1 A 0 A_JumpIfInventory("removegasmask", 1, "removeanimation")
			TNT1 A 0 A_JumpIfInventory("battledrugtoken",1,"drugshot")
			TNT1 A 0 A_JumpIfInventory("BANDAGETOKEN",1,"BANDAGE")
			goto repair
		
		Select: 
		TNT1 A 0  A_Overlay(-10,"FirstPersonLegsStand")
		TNT1 A 0 {if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("LMGCrosshair"));}else{A_SetCrosshair(0);}}
		TNT1 A 0 a_removelight(1)
		TNT1 A 0 A_removelight(2)		
			TNT1 A 0 A_SetRoll(0)
			TNT1 A 0 SetPlayerProperty(0,0,2)
			TNT1 A 0 ACS_NAMEDEXECUTE("WEAPONSELECT",0)
			MGN1 A 0 A_Giveinventory("GoSpecial",1)
			MGN1 A 0 A_Giveinventory("HeavyAutomaticWeapon",1)
			MGN1 A 0 A_GiveInventory("RandomHeadExploder", 1)
			MGN1 A 0 A_Takeinventory("HasBarrel",1)
			TNT1 A 0 A_TakeInventory("throwtoken", 1)
		TNT1 A 0 A_TakeInventory("slashtoken", 1)
			SHTZ A 0 A_TakeInventory("Flaretoken", 1)
			MGN1 A 0 A_TakeInventory("TossGrenade", 1)
			MGN1 A 0 A_PlaySound("LMGSEL",1)
			TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_Raise
			wait
				
			
		Fire:
			MGN1 A 0
			TNT1 A 0 A_jumpifinventory("jammedLMG",1,"Unstuck")
			TNT1 A 0 A_JumpIFInventory("LMGAMMO", 1, 1)
			goto DRYFIRE
			
		//DURABILITY CHECK
		TNT1 A 0 A_JumpIFInventory("FirearmsdurabilityOFF", 1, 4)
		PIST F 0 A_Takeinventory("lmgDurability",1)
		PIST F 0 A_JumpIfInventory("lmgDurability",90, 2)
		PIST F 0 A_Jump(200, "Misfire")
		///
			
			BADF A 0 A_ALERTMONSTERS
			MGN1 A 0 A_PlaySound("FARHMG", 6)
			MGN1 A 0 A_PlaySound("LMGFIRE", 1)
			MGN1 A 0 A_ZoomFactor(0.98)
			MGN1 A 0 A_jump(255,"fire1","fire2","fire3")
			
			///FIRE1
			FIRE1:
			MGN1 A 0 A_SpawnItemEx("PlayerMuzzle2",30,5,27)
			LMGF B 1  A_Fireprojectile("mmgTracer", frandom(-1.1,1.1), 0,0,0,0, 0)
			PIST F 0 A_Takeinventory("lmgAMMO",1)
			TNT1 A 0 A_Quake(2,4,0,200)
			RIFG A 0 A_JumpIfInventory("norecoil", 1, 2)
			RIFG A 0 A_overlay(2,"recoil")
			MGN1 A 0 A_ZoomFactor(1.0)
			MGN1 A 0 A_Firecustommissile("50CaseSpawn2",random(-2,2),0,0,-12,-18)
			LMGF CD 1
			RIFG A 0
			
			TNT1 A 0 A_JumpIFInventory("LMGAMMO", 1, 1)
			goto ready3
			MGN1 A 0
			MGN1 A 0 A_PlaySound("FARHMG", 6)
			MGN1 A 0 A_PlaySound("LMGFIRE", 7)
			MGN1 A 0 A_ZoomFactor(0.98)
			MGN1 A 0 A_SpawnItemEx("PlayerMuzzle2",30,5,27)
			LMGF G 1 A_Fireprojectile("mmgTracer", frandom(-1.5,1.5), 0,0,0,0, 0)
			RIFG A 0 A_JumpIfInventory("norecoil", 1, 2)
			RIFG A 0 A_overlay(2,"recoil")
			PIST F 0 A_Takeinventory("lmgAMMO",1)
			MGN1 A 0 A_ZoomFactor(1.0)
			MGN1 A 0 A_Firecustommissile("50CaseSpawn2",random(-2,2),0,0,-12,-18)
			LMGF HI 1
			goto firecontinue
			
			///FIRE2
			FIRE2:
			MGN1 A 0 A_SpawnItemEx("PlayerMuzzle2",30,5,27)
			LMGF L 1  A_Fireprojectile("mmgTracer", frandom(-1.3,1.3), 0,0,0,0, 0)
			PIST F 0 A_Takeinventory("lmgAMMO",1)
			TNT1 A 0 A_Quake(2,4,0,200)
			RIFG A 0 A_JumpIfInventory("norecoil", 1, 2)
			RIFG A 0 A_overlay(2,"recoil")
			MGN1 A 0 A_ZoomFactor(1.0)
			MGN1 A 0 A_Firecustommissile("50CaseSpawn2",random(-2,2),0,0,-12,-18)
			LMGF CD 1
			RIFG A 0
			
			TNT1 A 0 A_JumpIFInventory("LMGAMMO", 1, 1)
			goto ready3
			MGN1 A 0
			MGN1 A 0 A_PlaySound("FARHMG", 6)
			MGN1 A 0 A_PlaySound("LMGFIRE", 7)
			MGN1 A 0 A_ZoomFactor(0.98)
			MGN1 A 0 A_SpawnItemEx("PlayerMuzzle2",30,5,27)
			LMGF G 1  A_Fireprojectile("mmgTracer", frandom(-1.6,1.6), 0,0,0,0, 0)
			RIFG A 0 A_JumpIfInventory("norecoil", 1, 2)
			RIFG A 0 A_overlay(2,"recoil")
			PIST F 0 A_Takeinventory("lmgAMMO",1)
			MGN1 A 0 A_ZoomFactor(1.0)
			MGN1 A 0 A_Firecustommissile("50CaseSpawn2",random(-2,2),0,0,-12,-18)
			LMGF HI 1
			goto firecontinue
			
			/// FIRE3
			FIRE3:
			MGN1 A 0 A_SpawnItemEx("PlayerMuzzle2",30,5,27)
			LMGF B 1  A_Fireprojectile("mmgTracer", frandom(-1.2,1.2), 0,0,0,0, 0)
			PIST F 0 A_Takeinventory("lmgAMMO",1)
			TNT1 A 0 A_Quake(2,4,0,200)
			RIFG A 0 A_JumpIfInventory("norecoil", 1, 2)
			RIFG A 0 A_overlay(2,"recoil")
			MGN1 A 0 A_ZoomFactor(1.0)
			MGN1 A 0 A_Firecustommissile("50CaseSpawn2",random(-2,2),0,0,-12,-18)
			LMGF CD 1
			RIFG A 0
			
			TNT1 A 0 A_JumpIFInventory("LMGAMMO", 1, 1)
			goto ready3
			MGN1 A 0
			MGN1 A 0 A_PlaySound("FARHMG", 6)
			MGN1 A 0 A_PlaySound("LMGFIRE", 7)
			MGN1 A 0 A_ZoomFactor(0.98)
			MGN1 A 0 A_SpawnItemEx("PlayerMuzzle2",30,5,27)
			LMGF L 1  A_Fireprojectile("mmgTracer", frandom(-1.5,1.5), 0,0,0,0, 0)
			RIFG A 0 A_JumpIfInventory("norecoil", 1, 2)
			RIFG A 0 A_overlay(2,"recoil")
			PIST F 0 A_Takeinventory("lmgAMMO",1)
			MGN1 A 0 A_ZoomFactor(1.0)
			MGN1 A 0 A_Firecustommissile("50CaseSpawn2",random(-2,2),0,0,-12,-18)
			LMGF CD 1
			GOTO FIRECONTINUE
			
			/// JAMMED FIRE
			FIREJAMMED:
			MGN1 A 0
			BADF A 0 A_ALERTMONSTERS
			MGN1 A 0 A_PlaySound("FARHMG", 6)
			MGN1 A 0 A_PlaySound("LMGFIRE", 7)
			MGN1 A 0 A_ZoomFactor(0.98)
			MGN1 A 0 A_SpawnItemEx("PlayerMuzzle2",30,5,27)
			LMGF G 1  A_Fireprojectile("mmgTracer", frandom(-5.3,5.3), 0,0,0,0, 0)
			TNT1 A 0 A_Quake(2,2,0,200)
			RIFG A 0 A_JumpIfInventory("norecoil", 1, 2)
			RIFG A 0 A_overlay(2,"recoil")
			PIST F 0 A_Takeinventory("lmgAMMO",1)
			MGN1 A 0 A_ZoomFactor(1.0)
			LMGF HI 1
			LMGF H 0 A_JUMP(8, "JAMMED")
			MGN1 A 0 A_Firecustommissile("50CaseSpawn2",random(-2,2),0,0,-12,-18)
			LMGF IIII 1

			FIRECONTINUE:
			/// DURABILITY CHECK 2
			PIST F 0 A_JumpIfInventory("lmgdurability", 1, 1)
			goto weaponbreak
			TNT1 A 0
			///
			MGN1 A 0 A_Refire
			goto Ready3
		
		DRYFIRE:
		MGN1 A 0 A_JumpIfInventory("HASUNLOADEDLMG", 1, "DRYFIREUNLOADED")
		LMGF A 17 A_playsound("DRYFIRE")
		GOTO READY3
		
		DRYFIREUNLOADED:
		LMGR A 17 A_playsound("DRYFIRE")
		GOTO READY3
			
		AltFire:
			MGN1 A 0
			MGN1 A 0 A_JumpIfInventory("LMGGRENADE", 1, 2)
			MGN1 A 0 A_JumpIfInventory("HASUNLOADEDLMG", 1, "DRYFIREUNLOADED")
			goto DRYFIRE
			
			
		//DURABILITY CHECK
		TNT1 A 0 A_JumpIFInventory("FirearmsdurabilityOFF", 1, 4)
		PIST F 0 A_Takeinventory("lmgDurability",5)
		PIST F 0 A_JumpIfInventory("lmgDurability",90, 2)
		PIST F 0 A_Jump(130, "MisfireGRENADE")
		///
			
			MGN1 A 0 A_JumpIfInventory("HASUNLOADEDLMG", 1, "UNLOADEDgrenade")
			LMGG ABC 1
			BADF A 0 A_ALERTMONSTERS
			MGN1 A 0 A_PlaySound("weapons/firegrenade")
			MGN1 A 0 A_FireCustomMissile("RedFlareSpawn",-5,0,0,0)
			TNT1 AAAAAA 0  A_FireCustomMissile("ShotgunParticles", random(-16,16), 0, -1, random(-9,9))
			MGN2 A 0  A_FireCustomMissile("ShortGrenade", 0, 1, 0, 0)
			TNT1 A 0 A_takeinventory("LMGGRENADE")
			RIFG A 0 A_JumpIfInventory("norecoil", 1, 2)
			RIFG A 0 A_OVERLAY(2,"GRENADERECOIL")
			MGN1 A 0 
			MGN1 A 0 A_Recoil(8)
			LMGG DEFGH 1 
			LMGG IJKL 1
			
			/// DURABILITY CHECK 2
			PIST F 0 A_JumpIfInventory("lmgdurability", 1, 1)
			goto weaponbreak
			TNT1 A 0
			///			
			LMGF A 10
			goto Ready3
		
		SADGRENADE:	
			LMGG ABC 1
			BADF A 0 A_ALERTMONSTERS
			MGN1 A 0 A_PlaySound("weapons/firegrenade")
			MGN1 A 0 A_FireCustomMissile("RedFlareSpawn",-5,0,0,0)
			TNT1 AAAAAA 0  A_FireCustomMissile("ShotgunParticles", random(-16,16), 0, -1, random(-9,9))
			MGN2 A 0  A_FireCustomMissile("SADGrenade", 0, 1, 0, 0)
			TNT1 A 0 A_takeinventory("LMGGRENADE")
			MGN1 A 0 
			MGN1 A 0 A_Recoil(5)
			LMGG DEFGH 1 
			LMGG IJKL 1
			
			/// DURABILITY CHECK 2
			PIST F 0 A_JumpIfInventory("lmgdurability", 1, 1)
			goto weaponbreak
			TNT1 A 0
			///			
			LMGF A 10
			goto Ready3
	
	UNLOADEDGRENADE:
	LMGG MNO 1
			MGN1 A 0 A_PlaySound("weapons/firegrenade")
			MGN1 A 0 A_FireCustomMissile("RedFlareSpawn",-5,0,0,0)
			TNT1 AAAAAA 0  A_FireCustomMissile("ShotgunParticles", random(-16,16), 0, -1, random(-9,9))
			MGN2 A 0  A_FireCustomMissile("ShortGrenade", 0, 1, 0, 0)
			TNT1 A 0 A_takeinventory("LMGGRENADE")
			RIFG A 0 A_JumpIfInventory("norecoil", 1, 2)
			RIFG A 0 A_OVERLAY(2,"GRENADERECOIL")
			MGN1 A 0 
			MGN1 A 0 A_Recoil(8)
			LMGG PQRSTU 1 
			LMGR A 4
			
			/// DURABILITY CHECK 2
			PIST F 0 A_JumpIfInventory("lmgdurability", 1, 1)
			goto weaponbreak
			TNT1 A 0
			///			
			LMGR A 10
			goto Ready3
		
		UNLOADEDSADGRENADE:	
			LMGG MNO 1
			MGN1 A 0 A_PlaySound("weapons/firegrenade")
			MGN1 A 0 A_FireCustomMissile("RedFlareSpawn",-5,0,0,0)
			TNT1 AAAAAA 0  A_FireCustomMissile("ShotgunParticles", random(-16,16), 0, -1, random(-9,9))
			MGN2 A 0  A_FireCustomMissile("SADGrenade", 0, 1, 0, 0)
			TNT1 A 0 A_takeinventory("LMGGRENADE")
			MGN1 A 0 
			MGN1 A 0 A_Recoil(5)
			LMGG PQRSTU 1 
			LMGR A 4
			
			/// DURABILITY CHECK 2
			PIST F 0 A_JumpIfInventory("lmgdurability", 1, 1)
			goto weaponbreak
			TNT1 A 0
			///			
			LMGR A 10
			goto Ready3
	
	RECOIL:
	TNT1 AA 1 A_SetPitch(-1.5 + pitch)
	TNT1 AA 1 A_SetPitch(+0.5 + pitch)
	stop
	
	GRENADERECOIL:
	TNT1 AAA 1 A_SetPitch(-3.0 + pitch)
	TNT1 AAAAA 1 A_SetPitch(1.0 + pitch)
	STOP
		
	
		Reload:
		BADF A 0 A_ZoomFactor(1.0)
		BADF A 0 A_Takeinventory("ADSmode",1)
		BADF A 0 A_Takeinventory("Zoomed",1)
		TNT1 A 0 {if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("LMGCrosshair"));}else{A_SetCrosshair(0);}}
		BADF A 0 A_Takeinventory("Reloading",1)
		PIST F 0 A_JumpIfInventory("REPAIRMODE",1,"KITREPAIR")
		
		BADF A 0 A_JumpIfInventory("TurboReload",1,"TurboReload")
		TNT1 A 0 A_jumpifinventory("jammedLMG",1,"Unstuck")
		BADF A 0 A_JumpIfInventory("LMGAMMO",100,"Ready3")
		BADF A 0 A_JumpIfInventory("TurboReload",1,"TurboReload")
        BADF A 0 A_JumpIfInventory("Clip2",1,3)
        Goto FinishReloading
        TNT1 AAA 0
		BADF A 0 A_Takeinventory("Zoomed",1)
		TNT1 A 0 {if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("LMGCrosshair"));}else{A_SetCrosshair(0);}}						
		BADF A 0 A_GiveInventory ("Pumping", 1)
		BADF A 0 A_Takeinventory("Reloading",1)
		BADF A 0 A_JumpIfInventory("TurboReload",1,"TurboReload")
		BADF A 0
		BADR A 0 A_JumpIfInventory("HASUnloadedLMG",1,"UnloadedReload")
		BADF A 0 a_overlay(2,"unloadcamera")
        LMGU ABCDEFGHIJKL 1 A_WeaponReady
		LMGU L 10 A_WeaponReady
		BADF A 0 A_PlaySound("MGBOLT1", 1)
		LMGU MNOPQR 2 A_WeaponReady
		BADF A 0 A_PlaySound("SSTEAM", 6, 0.2)
		LMGU STUVWXYZ 2 A_JumpIfInventory("Kicking",1,"DOKICKLMG")
		BADF A 0 A_PlaySound("MGBOLT2", 1)
		LMGL N 1
		LMGL N 15
		BADF A 0 A_PlaySound("MGMAGOUT", 1)
		LMGL N 5
		LMGL LLKJIHGF 1
		
		SMGG A 0 A_JumpIfInventory("HASUnloadedLMG", 1, 6)
		BADF A 0 A_JumpIfInventory("realreloadOFF",1,2)
		PIST F 0 A_JumpIfInventory("LMGAMMO",1,3)
		BADF A 0 A_FireCustomMissile("MMGboxSpawn",-5,0,8,-4)
		PIST F 0 A_Jump(256,2)
		RIFR C 0 ACS_NAMEDEXECUTE("DropMMGMAG",0)
		
		LMGL EDCBA 1 A_JumpIfInventory("Kicking",1,"DOKICKLMG")
		LMGR Z 10
		LMGR YXWVUT 1
		GOTO RELOAD2
       
	   
	    UnloadedReload:
		LMGR ABCDEFGHIJKKKKK 1
		
	Reload2:
		BADF A 0 A_PlaySound("BANDAGE1", 6,0.2)
		LMGR LMNO 2 a_SETPITCH(PITCH+1)
		LMGR PQRST 2 a_SETPITCH(PITCH-1)
		LMGR UVWX 1 a_SETROLL(ROLL+1)
		LMGR YZ 1 
		LMGR Z 17		
		LMGL ABCDEFGHIJ 1
		BADF A 0 a_overlay(2,"reloadcamera")
		LMGL KK 1
		BADF A 0 A_PlaySound("MGMAGIN", 6)
		LMGL KLN 1 
		LMGL N 15
		LMGL O 1
		LMGL P 7
		LMGL P 0 A_PlaySound("mgmagtap", 1)
		TNT1 A 0 A_QUAKE(2,4,0,200)
		LMGL STUV 3 A_JumpIfInventory("Kicking",1,"DOKICKLMG")
		LMGL WXYZ 1 A_JumpIfInventory("Kicking",1,"DOKICKLMG")
		LMGD EDCB 1 a_SETROLL(ROLL-1)
		BADF A 0 A_PlaySound("MGBOLT2", 1)
				
	reloadcontinue:
		BADF A 0 A_Takeinventory("HASUnloadedLMG",1)
		BADF A 0 A_Takeinventory("HasUnloaded",1)
		BADF A 0 A_JumpIfInventory("realreloadOFF",1,"INSERTBULLETS")
		BADF A 0 A_Takeinventory("LMGammo",100)
		Goto InsertBullets
		
	TurboReload:
		BADF A 0 A_Takeinventory("HasUnloaded",1)
		BADF A 0 A_JumpIfInventory("Clip2",1,3)
		Goto Ready3
		RIFS ABC 0
        Goto InsertBullets
		
	InsertBullets:
		TNT1 AAAA 0
		BADF A 0 A_JumpIfInventory("LMGAmmo",100,"READY3")
		BADF A 0 A_JumpIfInventory("Clip2",1,3)
		Goto FinishReloading
        TNT1 AAAAAA 0
		BADF A 0 A_Giveinventory("LMGAmmo",1)
		BADF A 0 A_Takeinventory("Clip2",1)
		Goto InsertBullets		
		
		TNT1 AAAAAAAAAA 0
		BADF A 0 A_Takeinventory("Reloading",1)	
		BADF A 0 A_Refire
        Goto FinishReloading
		
		TNT1 AAAA 0
		BADF A 0 A_Takeinventory("Reloading",1)	
		BADF A 0 A_Refire
        Goto FinishReloading
		
	FinishReloading:
		BADF A 0 A_SetRoll(0)
		BADF A 0 A_Refire
		Goto Ready3
	
    CheckMag:
		LMGU YZ 1
		BADF A 0 A_PlaySound("MGMAGOUT", 1)
		LMGL NLKJIHGFEDCBA 1
		LMGI XWV 1
		BADF A 0 A_STOPSound(1)
		LMG1 ZYX 1
	CheckMagHold:
		TNT1 A 0 A_clearoverlays(2,2)
		LMG1 X 5 A_weaponready(WRF_NOFIRE | WRF_NOSWITCH)
		TNT1 A 0 A_JumpIFInventory("FirearmsdurabilityOFF", 1, 2)
		TNT1 A 0 ACS_NAMEDEXECUTEalways("mmgDURABILITYCHECK",0)
		TNT1 A 0 ACS_NamedExecutealways("MMGMAGCheck",0)
		TNT1 A 0 ACS_NamedExecutealways("MMGGRENADECHECK",0)
		TNT1 A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & BT_USER4, "CheckMagHold")
		
		LMG1 YZ 1
		LMGI VWX 1
		LMGL ABCDEFGH 1
		 BADF A 0 A_PlaySound("MGMAGIN")
		LMGL IJKLN 1
		LMGU ZY 1
		LMGU IHGFEDCBA 1
		 goto Ready3
			
	user4:
		TNT1 A 0 A_jumpifinventory("jammedLMG",1,"Unstuck")
        BADF A 0 A_JumpIfInventory("LMGAmmo",1,7)
		BADF A 0 A_JumpIfInventory("LMGGRENADE",1,"UnloadGrenade")
		RIFG A 0 A_JumpIfInventory("HASUNLOADEDLMG",1,3)
		LMGD B 5 
		RIFG A 0 A_Jump(256,2)
		LMGR A 5
		TNT1 A 0
		goto noammoUnload
		LMGF A 1 A_WeaponReady
		BADF A 0 A_ZoomFactor(1.0)
		BADF A 0 A_Takeinventory("ADSmode",1)
		BADF A 0 A_Takeinventory("Zoomed",1)
		TNT1 A 0 {if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("LMGCrosshair"));}else{A_SetCrosshair(0);}}
        TNT1 AAA 0
		BADF A 0 A_Takeinventory("Zoomed",1)						
		BADF A 0 a_overlay(2,"unloadcamera")
        LMGU ABCDEFGHI 1
		TNT1 A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & BT_USER4, "CheckMag")
		LMGU JKL 1 A_WeaponReady
		LMGU L 10 A_WeaponReady
		BADF A 0 A_PlaySound("MGBOLT1", 1)
		LMGU MNOPQR 2 A_WeaponReady
		BADF A 0 A_PlaySound("SSTEAM", 6, 0.2)
		LMGU STUVWXYZ 2 A_JumpIfInventory("Kicking",1,"DOKICKLMG")
		BADF A 0 A_PlaySound("MGBOLT2", 1)
		LMGL N 5
		BADF A 0 A_PlaySound("MGMAGOUT", 1)
		LMGL N 5
		LMGL LLKJIHG 1
		LMGL G 10
		
	RemoveBullets:
		TNT1 AAAA 0
		BADF A 0 A_JumpIfInventory("LMGAmmo",1,3)
		Goto FinishUnload
        TNT1 AAAAAA 0
		BADF A 0 A_Takeinventory("LMGAmmo",1)
		BADF A 0 A_Giveinventory("Clip2",1)
		Goto RemoveBullets
	
	FInishUnload:
		LMGL FEDCBA 1
		LMGR ZYXWVUT 1 A_JumpIfInventory("Kicking",1,"DOKICKLMG")
		LMGR KJIHGFEDCBA 1
		BADF A 0 A_PlaySound("DRYFIRE")
		BADF A 0 A_GiveInventory("HasUnloaded", 1)
		BADF A 0 A_GiveInventory("HASUnloadedLMG",1)
		Goto Ready3
		
		UNLOADGRENADE:
			MGN1 A 0
			MGN1 A 0 A_JumpIfInventory("HASUNLOADEDLMG", 1, "UNLOADgrenadeEMPTY")
			LMLG O 0 A_PLAYSOUND("GRLLO1",6)	
			TNT1 A 0 A_JUMPIFINVENTORY("LMGGRENADE",1,1)
			GOTO READY3
			LMLG ZYXWVUTSRQP 1
			LMLG ONN 1
			LMLG O 0 A_PLAYSOUND("weapons/reloadgrenade",1)	
			LMLG MMMMLLKJIHGFEDCBA 1
			LMLG O 0 A_GIVEINVENTORY("grenadeammo", 1)
			LMLG O 0 A_TAKEINVENTORY("LMGGRENADE", 1)
			Goto Ready3
		
		
		UNLOADGRENADEEMPTY:
			MGN1 A 0
			LMLG O 0 A_PLAYSOUND("GRLLO2",6)	
			TNT1 A 0 A_JUMPIFINVENTORY("LMGGRENADE",1,1)
			GOTO READY3
			LMUG XWVUTSRQP 1
			LMLG O 0 A_PLAYSOUND("GRLLO1",1)
			LMUG OONNNNMMMMLLKJIHGFEDCBA 1
			LMLG O 0 A_GIVEINVENTORY("grenadeammo", 1)
			LMLG O 0 A_TAKEINVENTORY("LMGGRENADE", 1)
			Goto Ready3
					
		
		ReloadGrenade:			
			MGN1 A 0
			LMLG O 0 A_TAKEINVENTORY("STARTDUALWIELD", 1)
			LMGF A 0 A_JumpIfInventory("LMGGRENADE",1,"UNLOADGRENADE")
			MGN1 A 0 A_JumpIfInventory("HASUNLOADEDLMG", 1, "UNLOADEDreloadgrenade")
			LMLG O 0 A_PLAYSOUND("GRLLO1",6)	
			TNT1 A 0 A_JUMPIFINVENTORY("grenadeammo",1,1)
			GOTO READY3
			TNT1 A 0 A_JUMPIFINVENTORY("LMGGRENADE",1,"READY3")
			LMLG ABCDEFGHIJKLLMMMM 1
			LMLG O 0 A_PLAYSOUND("weapons/reloadgrenade",1)	
			LMLG NNO 2
			LMLG O 0 A_TAKEINVENTORY("grenadeammo", 1)
			LMLG O 0 A_GIVEINVENTORY("LMGGRENADE", 1)
			LMLG PQRSTUVWXYZ 1	
			LMLG O 0 A_PLAYSOUND("GRLLO1",6)	
			Goto Ready3
		
		UNLOADEDRELOADGRENADE:
			MGN1 A 0
			LMLG O 0 A_PLAYSOUND("GRLLO1",6)	
			LMLG O 0 A_TAKEINVENTORY("STARTDUALWIELD", 1)
			TNT1 A 0 A_JUMPIFINVENTORY("grenadeammo",1,1)
			GOTO READY3
			TNT1 A 0 A_JUMPIFINVENTORY("LMGGRENADE",1,"READY3")
			LMUG ABCDEFGHIJKLLMMMM 1
			LMLG O 0 A_PLAYSOUND("GRLLO2",1)	
			LMUG NNO 2
			LMLG O 0 A_TAKEINVENTORY("grenadeammo", 1)
			LMLG O 0 A_GIVEINVENTORY("LMGGRENADE", 1)
			LMUG PQRSTUVWX 1	
			LMLG O 0 A_PLAYSOUND("GRLLO1",6)	
			Goto Ready3
	
	WeaponCheckOverlay:
		TNT1 A 5
		PISA D 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & BT_USER4, 1)
		Stop
	WeaponCheck2:
		TNT1 A 1
		TNT1 A 0 A_JumpIFInventory("FirearmsdurabilityOFF", 1, 2)
		PISA D 0 ACS_NamedExecutealways("mmgdurabilitycheck", 0)
		PISA D 0 ACS_NamedExecutealways("mmgmagcheck", 0)
		TNT1 A 0 ACS_NamedExecutealways("MMGGRENADECHECK",0)
		PISA D 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & BT_USER4, "WeaponCheck2")
		stop	
	NoAmmoUnload:
			PISA D 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & BT_USER4, 1)
			goto Noammo
			TNT1 A 0 A_Overlay(98,"WeaponCheckOverlay",false)
		Noammo:
			TNT1 A 0 A_playsound("DRYFIRE")
		Noammo2:
			RIFG A 0 A_JumpIfInventory("HASUNLOADEDLMG",1,3)
			LMGD B 15 A_WeaponReady(WRF_NOPRIMARY)
			PISA D 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & BT_USER4, "Noammo2")
			goto Ready3
			LMGR A 15 A_WeaponReady(WRF_NOPRIMARY)
			PISA D 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & BT_USER4, "Noammo2")
			goto Ready3
			
			
			
		
		Misfire:
		TNT1 A 0 A_JUMP(230,"FIREJAMMED")
		TNT1 A 0 A_playsound("DRYFIRE")
		TNT1 A 0 A_giveinventory("lmgdurability",1)
		LMGD B 20
		goto Ready3
		
		MISFIREGRENADE:
		TNT1 A 0 A_JUMP(90,"SADGRENADE")
		TNT1 A 0 A_playsound("DRYFIRE")
		TNT1 A 0 A_giveinventory("lmgdurability",4)
		MGN1 A 0 A_JumpIfInventory("HASUNLOADEDLMG", 1, 2)
		LMGD B 20
		GOTO READY3		
		LMGR A 20
		GOTO READY3
		
		JAMMED:
		TNT1 A 0 A_GIVEINVENTORY("JAMMEDLMG",1)
		TNT1 A 0 A_playsound("DRYFIRE")
		LMGD B 20
		GOTO READY3
		
		UNSTUCK:
		LMGU ABCDEFGHI 1
		LMGL NNNOOPPPPPP 2
		TNT1 A 0 A_playsound("mgmagtap")
		LMGL SSSSPPPPPPPPPPPPPPPPPPP 1
		TNT1 A 0 A_playsound("mgmagtap")
		LMGL SSSSPPPPPPPPPPPPPPPPPPP 1
		TNT1 A 0 A_playsound("mgmagtap")
		TNT1 A 0 A_QuakeEx(3, 3, 3, 5, 0, 64, "", 0, 0, 0, 0, 0, 0, 1)
		LMGL STUVVUTSSSSSS 2
		TNT1 A 0 A_playsound("DRYFIRE")
		LMGL S 17
		TNT1 A 0 A_playsound("DRYFIRE")
		LMGL S 17
		LMGU IJK 1
		LMGU K 8
		BADF A 0 A_PlaySound("MGBOLT1", 1)
		LMGU LMNOP 2
		BADF A 0 A_STOPSound(1)
		LMGU PPPPPP 2
		BADF A 0 A_PlaySound("MGBOLT1", 1)
		LMGU QQQQ 1
		BADF A 0 A_STOPSound(1)
		LMGU PPPPP  2
		BADF A 0 A_PlaySound("MGBOLT1", 1)
		LMGU QQQQ 1
		BADF A 0 A_STOPSound(1)
		LMGU PPPONMLLLLLLLLLLL  2
		TNT1 A 0 A_QuakeEx(1, 1, 1, 5, 0, 64, "", 0, 0, 0, 0, 0, 0, 1)
		MGN1 A 0 A_Firecustommissile("50CaseSpawn2",random(-2,2),0,0,-12,-18)
		LMGU A 0 a_TAKEINVENTORY("JAMMEDLMG",1)
		BADF A 0 A_PlaySound("MGBOLT1", 1)
		LMGU MNOPQRS 2
		BADF A 0 A_PlaySound("SSTEAM", 6,0.2)
		LMGU TUV 2
		LMGU WIHGFEDCBA 1
		GOTO READY3
		
		Weaponbreak:
		TNT1 A 0 a_print("your Machinegun has broken!")
		LMUG ABCD 1
		LMGD HEF 1	
		TNT1 A 1
		TNT1 A 0 a_SPAWNITEM("brokenMMG",0,0)
		 TNT1 A 0 a_RADIUSGIVE("hasbeendropped",90, RGF_OBJECTS | RGF_NOSIGHT, 1, "brokenMMG")		
		TNT1 A 0 ACS_namedexecute("BROKENDISARM",0)
		TNT1 AAA 1 a_weaponready
		Wait
		
		UnloadCamera:
		TNT1 AA 1 a_setpitch(pitch-1)
		TNT1 AAAAA 1 a_setangle(angle-1)
		TNT1 AAAA 1 a_setpitch(pitch-1)
		TNT1 A 10
		
		TNT1 AAAAAA 1 a_setpitch(pitch+0.5)
		TNT1 AA 1 a_setpitch(pitch+1.7)
		TNT1 AA 1 a_setpitch(pitch+0.7)
		TNT1 AAAA 1 a_setpitch(pitch-1.2)
		TNT1 AAAAAAAA 1 a_setpitch(pitch+0.5)
		TNT1 AAAA 1 a_setangle(angle+0.8)
		
		TNT1 AA 1 a_setangle(angle+1.2)
		TNT1 AAA 1 a_setpitch(pitch+1.2)
		TNT1 A 1 a_setangle(angle-1)
		TNT1 AAAAAA 1 a_setpitch(pitch-1)	
		stop
			
		ReloadCamera:
		TNT1 AA 1 a_setangle(angle+1)
		TNT1 A 1 a_setpitch(pitch-1)	
		TNT1 A 1 a_setangle(angle-1)
		TNT1 A 1 a_setpitch(pitch-2)
		TNT1 AAAAAAAAAA 1 a_setpitch(pitch-0.3)
		TNT1 A 1 a_setpitch(pitch+2)
		TNT1 AAAAA 1 a_setpitch(pitch+0.5)
		TNT1 A 1 a_setpitch(pitch-2.5)
		TNT1 AAAAAA 1 a_setpitch(pitch-0.5)
		TNT1 AAAAAA 1 a_setpitch(pitch+1.2)
		TNT1 AA 1 a_setpitch(pitch+1)
		TNT1 AAAA 1 a_setpitch(pitch-1)
		stop	
		
		InspectCamera:
		TNT1 AAAA 1 a_setpitch(pitch-0.5)
		TNT1 AAAA 1 a_setangle(angle-0.5)
		TNT1 AAAAAA 2 a_setpitch(pitch+0.8)
		TNT1 AAAAAA 2 a_setangle(angle+0.8)
		TNT1 AAAAAAAA 1 a_setpitch(pitch+0.4)
		TNT1 A 10
		TNT1 AAAAA 1 a_setpitch(pitch-3)
		TNT1 A 1 a_setpitch(pitch+1.2)
		TNT1 AAA 1 a_setangle(angle-0.5)
		TNT1 AAAAAAAAAA 1 a_setpitch(pitch+0.4)
		TNT1 AAAAAA 1 a_setpitch(pitch+1)
		TNT1 AAAAA 1 a_setangle(angle-0.5)
		TNT1 AA 1 a_setpitch(pitch+1)		
		stop	
		
	KITREPAIR:
		TNT1 A 0 A_JumpIFInventory("survivalkituses",1, 2)
		PIST F 0 A_Jump(256,"kitbroke")
		MGN1 A 0 A_JumpIfInventory("HASUNLOADEDLMG",1,3)
		LMGF A 5 
		PIST F 0 A_Jump(256,2)
		LMGR A 5 

		
		
		TNT1 A 0 A_JumpIFInventory("LMGDurability",300, "NoNeedRepair")
		PIST F 0 A_JumpIfInventory("scrapmetal",1, 2)
		PIST F 0 A_Jump(256,"outofmetal")
		
	KITREPAIR2:
		PIST F 0 A_GIVEinventory("LMGDurability",50)
		BADF A 0 A_Takeinventory("survivalkituses",1)
		BADF A 0 A_Takeinventory("scrapmetal",1)
		TNT1 A 0 A_playsound("WIRECUT",1)
		LMGD BCDEFGG 1
		TNT1 A 25
		LMGD GGFEDCB 1
		
		TNT1 A 0 A_JumpIFInventory("survivalkituses",1, 2)
		PIST F 0 A_Jump(256,"kitbroke")
		
		MGN1 A 0 A_JumpIfInventory("HASUNLOADEDLMG",1,3)
		LMGF A 2 
		PIST F 0 A_Jump(256,2)
		LMGR A 2
		MGN1 A 0
		goto Ready3	
		
	DoKICKLMG:
		TNT1 A 0 A_JumpIfInventory("isdoomguy", 1, 4)
		TNT1 A 0 A_JumpIfInventory("LARGESTAMINA", 1, 2)
		TNT1 A 0 A_JumpifInventory("UsedStamina",95,4)
		TNT1 A 0 A_JumpifInventory("UsedStamina",1995,3)
		TNT1 A 0 A_overlay(3,"KICKLMG")
		TNT1 A 0 a_Jump(256,"Dokick")
		goto Ready3
		TNT1 A 0 A_overlay(3,"KICKLMGtired")
		TNT1 A 0 a_Jump(256,"Dokick")
		goto Ready3	
	KICKLMG:
		TNT1 A 0 A_JumpIfInventory("HASUNLOADEDLMG",1,"KICKLMGEMPTY")
		LMGS BCD 1
		LMGS E 12 
		LMGS DCB 1 
		TNT1 A 0 A_JumpIfInventory("Airkicking", 1, 2)
		TNT1 A 0 A_JumpIfInventory("isSliding", 1, 2)
		stop
		LMGS B 10
		STOP
		LMGD BCDEFG 1
		TNT1 A 4 
		STOP

	KICKLMGtired:
		TNT1 A 0 A_JumpIfInventory("HASUNLOADEDLMG",1,"KICKLMGEMPTYTIRED")
		LMGS BCD 2 
		LMGS E 37 
		LMGS DCB 2 
		STOP		
		
	KICKLMGEMPTY:
		LMGR ABC 1
		LMGR D 12 
		LMGR CBAB 1 
		TNT1 A 0 A_JumpIfInventory("Airkicking", 1, 2)
		TNT1 A 0 A_JumpIfInventory("isSliding", 1, 2)
		stop
		LMGR A 10
		STOP
		LMUG ABCD 1
		LMGD HEF 1	
		TNT1 A 3
		STOP
	KICKLMGEMPTYtired:
		LMGR ABC 2 
		LMGR D 37 
		LMGR CBA 2 
		STOP	
		
		}
}

ACTOR LMGAmmo : Ammo
{
   Inventory.Amount 0
   Inventory.MaxAmount 100
   Ammo.BackpackAmount 0
   Ammo.BackpackMaxAmount 100
   Inventory.Icon "R762A0"
}

ACTOR LMGGRENADE : Ammo
{
   Inventory.Amount 0
   Inventory.MaxAmount 1
   Ammo.BackpackAmount 0
   Ammo.BackpackMaxAmount 1
   Inventory.Icon "R762A0"
}