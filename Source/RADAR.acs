#library "RADAR.txt"
//Original script by Cybermind, CREDITS GO TO HIM, I only edited it!

#include "zcommon.acs"

int pid=1000000;
int tidcounter=10000;
int count=0;
int mode=0;
global int 1:kx[];
global int 2:ky[];
global int 3:kz[];
/*
function int sqrt(int x)
{
	int r;
	x = x + 1 >> 1;
	while (x > r)
	x-=r++;
	return r;
}
*/
function int sqrt2(int number)
{
	if(number <= 3)
	{
		if(number > 0)
		{
			return 1;
		}
		return 0;
	}

	int oldAns = number >> 1,                     // initial guess
	    newAns = (oldAns + number / oldAns) >> 1; // first iteration

	// main iterative method
	while(newAns < oldAns)
	{
		oldAns = newAns;
		newAns = (oldAns + number / oldAns) >> 1;
	}

	return oldAns;
}

function void DrawEllipse(int rx, int ry, int a, int b)
{
 int col,i,row,bnew;
 int a_square,b_square,two_a_square,two_b_square,four_a_square,four_b_square,d;

  b_square=b*b;
  a_square=a*a;
  row=b;
  col=0;
  two_a_square=a_square<<1;
  four_a_square=a_square<<2;
  four_b_square=b_square<<2;
  two_b_square=b_square<<1;
  SetFont("CONFONT");
  d=two_a_square*((row-1)*(row))+a_square+two_b_square*(1-a_square);
  while(a_square*(row)>b_square*(col))
  {
//   HudMessage(s:".";HUDMSG_PLAIN,++pid,20,((col+rx)<<16)+0.1,((row+ry)<<16)+0.1,3.0);
//   HudMessage(s:".";HUDMSG_PLAIN,++pid,20,((col+rx)<<16)+0.1,((ry-row)<<16)+0.1,3.0);
//   HudMessage(s:".";HUDMSG_PLAIN,++pid,20,((rx-col)<<16)+0.1,((row+ry)<<16)+0.1,3.0);
//   HudMessage(s:".";HUDMSG_PLAIN,++pid,20,((rx-col)<<16)+0.1,((ry-row)<<16)+0.1,3.0);
   if (d>=0)
   {
    row--;
    d-=four_a_square*(row);
   }
   d+=two_b_square*(3+(col<<1));
   col++;
  }
  d=two_b_square*(col+1)*col+two_a_square*(row*(row-2)+1)+(1-two_a_square)*b_square;
  while ((row) + 1)
  {
//   HudMessage(s:".";HUDMSG_PLAIN,++pid,20,((col+rx)<<16)+0.1,((row+ry)<<16)+0.1,3.0);
//   HudMessage(s:".";HUDMSG_PLAIN,++pid,20,((col+rx)<<16)+0.1,((ry-row)<<16)+0.1,3.0);
//   HudMessage(s:".";HUDMSG_PLAIN,++pid,20,((rx-col)<<16)+0.1,((row+ry)<<16)+0.1,3.0);
//   HudMessage(s:".";HUDMSG_PLAIN,++pid,20,((rx-col)<<16)+0.1,((ry-row)<<16)+0.1,3.0);
   if (d<=0)
   {
    col++;
    d+=four_b_square*col;
   }
   row--;
   d+=two_a_square*(3-(row <<1));
  }
}

function int abs(int x)
{
    if (x < 0)
        return -x;
    return x;
}

function int distance (int tid1, int tid2)
{
	int x, y, z, d;
	x = GetActorX(tid1) - GetActorX(tid2) >> 16; // Convert fixed point to integer
	y = GetActorY(tid1) - GetActorY(tid2) >> 16;
	z = GetActorZ(tid1) - GetActorZ(tid2) >> 16;
	d = sqrt2( x*x + y*y + z*z );
	return d;
}


function int distance2 (int x1, int y1, int z1, int x2, int y2, int z2)
{
	int x, y, z, d;
	x = (x1 - x2) >> 16; // Convert fixed point to integer
	y = (y1 - y2) >> 16;
	z = (z1 - z2) >> 16;
	d = sqrt2( x*x + y*y + z*z );
	return d;
}

function int getspeed (int tid)
{
int x = GetActorX(tid);
int y = GetActorY(tid);
int z = GetActorZ(tid);
int speed = distance2(x,y,z,kx[tid],ky[tid],kz[tid]);
kx[tid]=GetActorX(tid);
ky[tid]=GetActorY(tid);
kz[tid]=GetActorZ(tid);
return speed;
}



function void DrawRadar(int tid, int scale,int x1,int y1, int mod, int dist)
{
int x,y,dx,dy;
int scan;
SetHudSize(640,480,0);
SetFont("SMALLFONT");
HudMessage(s:"^";HUDMSG_PLAIN,1,7,(x1<<16)+0.1,(y1<<16)+0.1,0.01);
for (int i=10000;i<tidcounter;++i)
{
	x=GetActorX(tid)-GetActorX(i);
	y=GetActorY(tid)-GetActorY(i);
	if (mod==1) 
		scan=distance(tid,i) <= dist && CheckSight(0,i,0);
	if (mod==0 || mod==2) 
		scan=distance(tid,i) <= dist;
		if (scan)
		{
			dx=((((FixedMul(x,cos(-GetActorAngle(0))))-(FixedMul(y,sin(-GetActorAngle(0)))))));
			dy=((((FixedMul(x,sin(-GetActorAngle(0))))+(FixedMul(y,cos(-GetActorAngle(0)))))));
			dx/=scale; dx+=y1<<16; dx=dx>>16; dx=dx<<16;
			dy/=scale; dy+=x1<<16; dy=dy>>16; dy=dy<<16;
			if (dx<0) dx-=0.1; else dx+=0.1;
			if (dy<0) dy-=0.1; else dy+=0.1;
			if (GetActorProperty(i,APROP_Speed) == 0  && GetActorProperty(i,APROP_SpawnHealth) == 1000 && mod!=2)
				HudMessage(s:"o";HUDMSG_PLAIN,i,16,dy,dx,0.1);
			else if (GetActorProperty(i,APROP_Speed) > 0  && GetActorProperty(i,APROP_SpawnHealth) == 1000 && CheckActorProperty(i,APROP_Species,"BaronOfHell")==0 && mod!=2)
				HudMessage(s:"o";HUDMSG_PLAIN,i,5,dy,dx,0.1);
			else if (GetActorProperty(i,APROP_SpawnHealth)>0 && GetActorProperty(i,APROP_Health)>0 && mod!=2)
				HudMessage(s:"o";HUDMSG_PLAIN,i,6,dy,dx,0.1);
			else if (GetActorProperty(i,APROP_SpawnHealth)>0 && GetActorProperty(i,APROP_Health)<=0 && mod!=2)
				HudMessage(s:"o";HUDMSG_PLAIN,i,12,dy,dx,0.1);
			else if (GetActorProperty(i,APROP_Speed) == 0  && GetActorProperty(i,APROP_SpawnHealth) == 1000 && mod==2);
			else if (GetActorProperty(i,APROP_Speed) > 0  && GetActorProperty(i,APROP_SpawnHealth) == 1000 && CheckActorProperty(i,APROP_Species,"BaronOfHell")==0 && mod==2);
			else if (GetActorProperty(i,APROP_SpawnHealth)>0 && GetActorProperty(i,APROP_Health)>0 && mod==2 && getspeed(i)>0)
				HudMessage(s:"o";HUDMSG_PLAIN,i,6,dy,dx,0.15);
			else if (GetActorProperty(i,APROP_SpawnHealth)>0 && GetActorProperty(i,APROP_Health)<=0 && mod==2);
		}
}
if (count == 0) {
		count=100;
		DrawEllipse(x1,y1,dist/scale,dist/scale);
	}
	--count;
}


Script "RADARSIGNAL" (Void)
{
delay(1);
Thing_ChangeTID(0,tidcounter++);
terminate;
}



//Radar Animation

Script 868 ENTER
while (1)
{
	If(Checkinventory("radartoken") >=1)
	{
   SetHudSize(640,480,0);
   SetFont("RADAR1"); // the actual rounded radar display
   HudMessage(c:'A'; HUDMSG_PLAIN | HUDMSG_ALPHA, 128, -1, 430.0, 475.0, 0, 0.2);
   DELAY(8);   
   SetFont("RSAFEZ"); // the actual rounded radar display
   HudMessage(c:'A'; HUDMSG_PLAIN | HUDMSG_ALPHA, 128, -1, 430.0, 475.0, 0, 0.2);
   DELAY(1);
   SetFont("RSAFEZ1"); // the actual rounded radar display
   HudMessage(c:'A'; HUDMSG_PLAIN | HUDMSG_ALPHA, 128, -1, 430.0, 475.0, 0, 0.2);
   DELAY(1); 
   SetFont("RSAFEZ2"); // the actual rounded radar display
   HudMessage(c:'A'; HUDMSG_PLAIN | HUDMSG_ALPHA, 128, -1, 430.0, 475.0, 0, 0.2);
   DELAY(1);
   SetFont("RSAFEZ3"); // the actual rounded radar display
   HudMessage(c:'A'; HUDMSG_PLAIN | HUDMSG_ALPHA, 128, -1, 430.0, 475.0, 0, 0.2);
   DELAY(1);   
   SetFont("RSAFEZ4"); // the actual rounded radar display
   HudMessage(c:'A'; HUDMSG_PLAIN | HUDMSG_ALPHA, 128, -1, 430.0, 475.0, 0, 0.2);
   DELAY(1);   
   SetFont("RSAFEZ5"); // the actual rounded radar display
   HudMessage(c:'A'; HUDMSG_PLAIN | HUDMSG_ALPHA, 128, -1, 430.0, 475.0, 0, 0.2);
   DELAY(1);
   SetFont("RSAFEZ6"); // the actual rounded radar display
   HudMessage(c:'A'; HUDMSG_PLAIN | HUDMSG_ALPHA, 128, -1, 430.0, 475.0, 0, 0.2);
   DELAY(1);
   SetFont("RSAFEZ7"); // the actual rounded radar display
   HudMessage(c:'A'; HUDMSG_PLAIN | HUDMSG_ALPHA, 128, -1, 430.0, 475.0, 0, 0.2);
   DELAY(1);
   SetFont("RSAFEZ8"); // the actual rounded radar display
   HudMessage(c:'A'; HUDMSG_PLAIN | HUDMSG_ALPHA, 128, -1, 430.0, 475.0, 0, 0.2);
   DELAY(1);
   SetFont("RSAFEZ9"); // the actual rounded radar display
   HudMessage(c:'A'; HUDMSG_PLAIN | HUDMSG_ALPHA, 128, -1, 430.0, 475.0, 0, 0.2);
   DELAY(1);
   SetFont("RSAFEZA"); // the actual rounded radar display
   HudMessage(c:'A'; HUDMSG_PLAIN | HUDMSG_ALPHA, 128, -1, 430.0, 475.0, 0, 0.2);
   DELAY(10); 
   Restart;
	}
	
	Else
	{
HudMessage(s:""; 0, 128, 0, 0, 0, 0);
	delay(1);
	restart;
	}
}


Script "RADARSTART" ENTER {
while (1)
{
	If(Checkinventory("radartoken") >=1)
	{
	delay(2);
	DrawRadar(0, 10, 430, 470, mode, 500);
	delay(2);
	}
	
	Else
	{
	delay(1);
	delay(1);
	}
delay(1);	
}
delay(1);
}

Script 103 (Void) net {
if (mode==1)
{
	mode=2;
	print(s:"Move scanner mode on");
}
else if (mode==2)
{
	mode=0;
	print(s:"Through-scan mode on");
}
else
{
	print(s:"Visor-scan mode on");
	mode=1;
}
}

Script "Radarmount" (VOID)
{
int armorsave = GetArmorInfo(ARMORINFO_SAVEPERCENT);
If (Checkinventory("basicarmor") >=1 && armorsave >=0.4)
	{
	print(s:"You mounted the movement sensor on your armor's dedicated socket");
	mode =2;
	Giveinventory("Radartoken",1);
	}
Else
	{
	print(s:"You need a functioning ordinance UAC armor to use this item");
	Giveinventory("Radar",1);
	}
delay(1);
}

Script "DeviceCHECK" ENTER
{
while (1)
{
If (Checkinventory("basicarmor") >=1)
	{
	delay(1);
	restart;
	}

/*Else if (Checkinventory("basicarmor") <=0 && checkinventory("droppingarmor") && checkinventory("radartoken") || checkinventory("lifemoduleON"))
	{
	delay(1);
	restart;
	}	
*/
Else if (Checkinventory("basicarmor") <=0 && checkinventory("radartoken") && checkinventory("lifemoduleON"))
	{
	print(s:"Your movement sensor and life support module malfunctioned!");
	Takeinventory("Radartoken",1);
	Takeinventory("lifemoduleon",1);
	}	
Else if (Checkinventory("basicarmor") <=0 && checkinventory("lifemoduleON"))
	{
	print(s:"Your life support module malfunctioned!");
	Takeinventory("lifemoduleon",1);
	}
Else if (Checkinventory("basicarmor") <=0 && checkinventory("radartoken"))
	{
	print(s:"Your movement sensor malfunctioned!");
	Takeinventory("Radartoken",1);
	}
delay(1);
}
}


	
//////////////////
///CLAIRVOYANCE
//////////////////

Script "CLAIRVOYANCESTART" ENTER 
{
while (1)
{
	If(Checkinventory("clairvoyancetoken") >=1)
	{
	delay(1);
	DrawRadar(0, 10, 430, 430, mode, 500);
	Delay(1);
	}
	
	Else
	{
	delay(1);
	}delay(1);}delay(1);}
	
	
	
//// STIM

script "GIVECLAIRVOYANCE" (void)
{
	if (Checkinventory("radartoken"))
	{
	DELAY(17);
	TAKEINVENTORY("radartoken",1);
	mode=0;
	DELAY(1);
	GIVEINVENTORY("clairvoyancetoken",1);
	DELAY(35*80);
  
			If (Checkinventory("basicarmor")>=1)
			{
			TAKEINVENTORY("clairvoyancetoken",1);
			DELAY(1);
			GIVEINVENTORY("radartoken",1);
			mode=2;
			delay(1);
			}
			
			Else
			{
			Print(s:"looks like your motion sensor isn't working anymore...");
			HudMessage(s:""; 0, 1, 0, 0, 0, 0);
			TAKEINVENTORY("clairvoyancetoken",1);
			mode=2;
			delay(1);
			}
	 }	
	 
	Else
	{DELAY(17);
	mode=0;
	GIVEINVENTORY("clairvoyancetoken",1);
	DELAY(35*80);
	HudMessage(s:""; 0, 1, 0, 0, 0, 0);
	TAKEINVENTORY("clairvoyancetoken",1);
	mode=2;
	delay(1);
	}
delay(1);			
}